From 45607ceee41f9183130ba850cf52f0d79d3aa51e Mon Sep 17 00:00:00 2001
From: Ian Pozella <Ian.Pozella@imgtec.com>
Date: Mon, 27 Feb 2017 20:56:31 +0000
Subject: [PATCH 23/28] mtd: spi-nand: switch to mtd_ooblayout_ops

Replace the nand_ecclayout definition by the equivalent mtd_ooblayout_ops
definition.

Signed-off-by: Ian Pozella <Ian.Pozella@imgtec.com>
---
 drivers/mtd/spi-nand/spi-nand-base.c   |  1 +
 drivers/mtd/spi-nand/spi-nand-device.c | 50 +++++++++++++++++++---------------
 include/linux/mtd/spi-nand.h           |  1 +
 3 files changed, 30 insertions(+), 22 deletions(-)

diff --git a/drivers/mtd/spi-nand/spi-nand-base.c b/drivers/mtd/spi-nand/spi-nand-base.c
index e78a98a..5d79f85 100644
--- a/drivers/mtd/spi-nand/spi-nand-base.c
+++ b/drivers/mtd/spi-nand/spi-nand-base.c
@@ -484,6 +484,7 @@ int spi_nand_register(struct spi_nand *snand, struct nand_flash_dev *flash_ids)
 	chip->options |= NAND_NO_SUBPAGE_WRITE;
 	chip->bits_per_cell = 1;
 
+	mtd_set_ooblayout(mtd, snand->ooblayout);
 	chip->ecc.read_page	= spi_nand_read_page_hwecc;
 	chip->ecc.write_page	= spi_nand_write_page_hwecc;
 	chip->ecc.mode		= NAND_ECC_HW;
diff --git a/drivers/mtd/spi-nand/spi-nand-device.c b/drivers/mtd/spi-nand/spi-nand-device.c
index 1a788c0..95db20b 100644
--- a/drivers/mtd/spi-nand/spi-nand-device.c
+++ b/drivers/mtd/spi-nand/spi-nand-device.c
@@ -48,27 +48,33 @@
 #define SPI_NAND_GD5F_ECC_UNCORR	(BIT(0) | BIT(1) | BIT(2))
 #define SPI_NAND_GD5F_ECC_SHIFT		4
 
-static struct nand_ecclayout ecc_layout_gd5f = {
-	.eccbytes = 128,
-	.eccpos = {
-		128, 129, 130, 131, 132, 133, 134, 135,
-		136, 137, 138, 139, 140, 141, 142, 143,
-		144, 145, 146, 147, 148, 149, 150, 151,
-		152, 153, 154, 155, 156, 157, 158, 159,
-		160, 161, 162, 163, 164, 165, 166, 167,
-		168, 169, 170, 171, 172, 173, 174, 175,
-		176, 177, 178, 179, 180, 181, 182, 183,
-		184, 185, 186, 187, 188, 189, 190, 191,
-		192, 193, 194, 195, 196, 197, 198, 199,
-		200, 201, 202, 203, 204, 205, 206, 207,
-		208, 209, 210, 211, 212, 213, 214, 215,
-		216, 217, 218, 219, 220, 221, 222, 223,
-		224, 225, 226, 227, 228, 229, 230, 231,
-		232, 233, 234, 235, 236, 237, 238, 239,
-		240, 241, 242, 243, 244, 245, 246, 247,
-		248, 249, 250, 251, 252, 253, 254, 255
-	},
-	.oobfree = { {1, 127} }
+static int spi_nand_gd5f_ooblayout_256_ecc(struct mtd_info *mtd, int section,
+					struct mtd_oob_region *oobregion)
+{
+	if (section)
+		return -ERANGE;
+
+	oobregion->offset = 128;
+	oobregion->length = 128;
+
+	return 0;
+}
+
+static int spi_nand_gd5f_ooblayout_256_free(struct mtd_info *mtd, int section,
+					struct mtd_oob_region *oobregion)
+{
+	if (section)
+		return -ERANGE;
+
+	oobregion->offset = 1;
+	oobregion->length = 127;
+
+	return 0;
+}
+
+static const struct mtd_ooblayout_ops spi_nand_gd5f_oob_256_ops = {
+	.ecc = spi_nand_gd5f_ooblayout_256_ecc,
+	.free = spi_nand_gd5f_ooblayout_256_free,
 };
 
 static struct nand_flash_dev spi_nand_flash_ids[] = {
@@ -82,7 +88,6 @@ static struct nand_flash_dev spi_nand_flash_ids[] = {
 		.oobsize = 256,
 		.ecc.strength_ds = 8,
 		.ecc.step_ds = 512,
-		.ecc.layout = &ecc_layout_gd5f,
 	},
 	{
 		.name = "SPI NAND 512MiB 1,8V",
@@ -419,6 +424,7 @@ static int spi_nand_device_probe(struct spi_device *spi)
 	case SPI_NAND_GD5F:
 		snand->read_id = spi_nand_gd5f_read_id;
 		snand->get_ecc_status = spi_nand_gd5f_ecc_status;
+		snand->ooblayout = &spi_nand_gd5f_oob_256_ops;
 		break;
 	default:
 		dev_err(snand->dev, "unknown device\n");
diff --git a/include/linux/mtd/spi-nand.h b/include/linux/mtd/spi-nand.h
index c7e52f9..b5cc99f 100644
--- a/include/linux/mtd/spi-nand.h
+++ b/include/linux/mtd/spi-nand.h
@@ -23,6 +23,7 @@ struct spi_nand {
 	unsigned int		page_addr;
 	unsigned int		bitflips;
 	bool			ecc;
+	struct mtd_ooblayout_ops *ooblayout;
 
 	int (*reset)(struct spi_nand *snand);
 	int (*read_id)(struct spi_nand *snand, u8 *buf);
-- 
2.7.4

